
spring.kafka.consumer.bootstrap-servers: centos-8-pc:9092
#spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: group-id
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers: centos-8-pc:9092
#spring.kafka.producer.bootstrap-servers: localhost:9092

# these are handled/configured in the code
#spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

#spring.data.mongodb.uri=mongodb+srv://bmcdougald:erngui6368@cluster0.gzzjztn.mongodb.net/ecommerce
spring.data.mongodb.uri=mongodb://localhost:27017/
spring.data.mongodb.database=ecommerce

#spring.datasource.url= jdbc:postgresql://localhost:5432/ecommerce
#spring.datasource.username= postgres
#spring.datasource.password= erngui6383

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto= update



